{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/langs/data.js","../../node_modules/langs/index.js","../../node_modules/locale-codes/index.js","../../src/SpeechToText.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","module.exports = [\n    {\"name\":\"Abkhaz\", \"local\":\"Аҧсуа\", \"1\":\"ab\", \"2\":\"abk\", \"2T\":\"abk\", \"2B\":\"abk\", \"3\":\"abk\"},\n    {\"name\":\"Afar\", \"local\":\"Afaraf\", \"1\":\"aa\", \"2\":\"aar\", \"2T\":\"aar\", \"2B\":\"aar\", \"3\":\"aar\"},\n    {\"name\":\"Afrikaans\", \"local\":\"Afrikaans\", \"1\":\"af\", \"2\":\"afr\", \"2T\":\"afr\", \"2B\":\"afr\", \"3\":\"afr\"},\n    {\"name\":\"Akan\", \"local\":\"Akan\", \"1\":\"ak\", \"2\":\"aka\", \"2T\":\"aka\", \"2B\":\"aka\", \"3\":\"aka\"},\n    {\"name\":\"Albanian\", \"local\":\"Shqip\", \"1\":\"sq\", \"2\":\"sqi\", \"2T\":\"sqi\", \"2B\":\"alb\", \"3\":\"sqi\"},\n    {\"name\":\"Amharic\", \"local\":\"አማርኛ\", \"1\":\"am\", \"2\":\"amh\", \"2T\":\"amh\", \"2B\":\"amh\", \"3\":\"amh\"},\n    {\"name\":\"Arabic\", \"local\":\"العربية\", \"1\":\"ar\", \"2\":\"ara\", \"2T\":\"ara\", \"2B\":\"ara\", \"3\":\"ara\"},\n    {\"name\":\"Aragonese\", \"local\":\"Aragonés\", \"1\":\"an\", \"2\":\"arg\", \"2T\":\"arg\", \"2B\":\"arg\", \"3\":\"arg\"},\n    {\"name\":\"Armenian\", \"local\":\"Հայերեն\", \"1\":\"hy\", \"2\":\"hye\", \"2T\":\"hye\", \"2B\":\"arm\", \"3\":\"hye\"},\n    {\"name\":\"Assamese\", \"local\":\"অসমীয়া\", \"1\":\"as\", \"2\":\"asm\", \"2T\":\"asm\", \"2B\":\"asm\", \"3\":\"asm\"},\n    {\"name\":\"Avaric\", \"local\":\"Авар\", \"1\":\"av\", \"2\":\"ava\", \"2T\":\"ava\", \"2B\":\"ava\", \"3\":\"ava\"},\n    {\"name\":\"Avestan\", \"local\":\"avesta\", \"1\":\"ae\", \"2\":\"ave\", \"2T\":\"ave\", \"2B\":\"ave\", \"3\":\"ave\"},\n    {\"name\":\"Aymara\", \"local\":\"Aymar\", \"1\":\"ay\", \"2\":\"aym\", \"2T\":\"aym\", \"2B\":\"aym\", \"3\":\"aym\"},\n    {\"name\":\"Azerbaijani\", \"local\":\"Azərbaycanca\", \"1\":\"az\", \"2\":\"aze\", \"2T\":\"aze\", \"2B\":\"aze\", \"3\":\"aze\"},\n    {\"name\":\"Bambara\", \"local\":\"Bamanankan\", \"1\":\"bm\", \"2\":\"bam\", \"2T\":\"bam\", \"2B\":\"bam\", \"3\":\"bam\"},\n    {\"name\":\"Bashkir\", \"local\":\"Башҡортса\", \"1\":\"ba\", \"2\":\"bak\", \"2T\":\"bak\", \"2B\":\"bak\", \"3\":\"bak\"},\n    {\"name\":\"Basque\", \"local\":\"Euskara\", \"1\":\"eu\", \"2\":\"eus\", \"2T\":\"eus\", \"2B\":\"baq\", \"3\":\"eus\"},\n    {\"name\":\"Belarusian\", \"local\":\"Беларуская\", \"1\":\"be\", \"2\":\"bel\", \"2T\":\"bel\", \"2B\":\"bel\", \"3\":\"bel\"},\n    {\"name\":\"Bengali\", \"local\":\"বাংলা\", \"1\":\"bn\", \"2\":\"ben\", \"2T\":\"ben\", \"2B\":\"ben\", \"3\":\"ben\"},\n    {\"name\":\"Bihari\", \"local\":\"भोजपुरी\", \"1\":\"bh\", \"2\":\"bih\", \"2T\":\"bih\", \"2B\":\"bih\", \"3\":\"bih\"},\n    {\"name\":\"Bislama\", \"local\":\"Bislama\", \"1\":\"bi\", \"2\":\"bis\", \"2T\":\"bis\", \"2B\":\"bis\", \"3\":\"bis\"},\n    {\"name\":\"Bosnian\", \"local\":\"Bosanski\", \"1\":\"bs\", \"2\":\"bos\", \"2T\":\"bos\", \"2B\":\"bos\", \"3\":\"bos\"},\n    {\"name\":\"Breton\", \"local\":\"Brezhoneg\", \"1\":\"br\", \"2\":\"bre\", \"2T\":\"bre\", \"2B\":\"bre\", \"3\":\"bre\"},\n    {\"name\":\"Bulgarian\", \"local\":\"Български\", \"1\":\"bg\", \"2\":\"bul\", \"2T\":\"bul\", \"2B\":\"bul\", \"3\":\"bul\"},\n    {\"name\":\"Burmese\", \"local\":\"မြန်မာဘာသာ\", \"1\":\"my\", \"2\":\"mya\", \"2T\":\"mya\", \"2B\":\"bur\", \"3\":\"mya\"},\n    {\"name\":\"Catalan\", \"local\":\"Català\", \"1\":\"ca\", \"2\":\"cat\", \"2T\":\"cat\", \"2B\":\"cat\", \"3\":\"cat\"},\n    {\"name\":\"Chamorro\", \"local\":\"Chamoru\", \"1\":\"ch\", \"2\":\"cha\", \"2T\":\"cha\", \"2B\":\"cha\", \"3\":\"cha\"},\n    {\"name\":\"Chechen\", \"local\":\"Нохчийн\", \"1\":\"ce\", \"2\":\"che\", \"2T\":\"che\", \"2B\":\"che\", \"3\":\"che\"},\n    {\"name\":\"Chichewa\", \"local\":\"Chichewa\", \"1\":\"ny\", \"2\":\"nya\", \"2T\":\"nya\", \"2B\":\"nya\", \"3\":\"nya\"},\n    {\"name\":\"Chinese\", \"local\":\"中文\", \"1\":\"zh\", \"2\":\"zho\", \"2T\":\"zho\", \"2B\":\"chi\", \"3\":\"zho\"},\n    {\"name\":\"Chuvash\", \"local\":\"Чӑвашла\", \"1\":\"cv\", \"2\":\"chv\", \"2T\":\"chv\", \"2B\":\"chv\", \"3\":\"chv\"},\n    {\"name\":\"Cornish\", \"local\":\"Kernewek\", \"1\":\"kw\", \"2\":\"cor\", \"2T\":\"cor\", \"2B\":\"cor\", \"3\":\"cor\"},\n    {\"name\":\"Corsican\", \"local\":\"Corsu\", \"1\":\"co\", \"2\":\"cos\", \"2T\":\"cos\", \"2B\":\"cos\", \"3\":\"cos\"},\n    {\"name\":\"Cree\", \"local\":\"ᓀᐦᐃᔭᐍᐏᐣ\", \"1\":\"cr\", \"2\":\"cre\", \"2T\":\"cre\", \"2B\":\"cre\", \"3\":\"cre\"},\n    {\"name\":\"Croatian\", \"local\":\"Hrvatski\", \"1\":\"hr\", \"2\":\"hrv\", \"2T\":\"hrv\", \"2B\":\"hrv\", \"3\":\"hrv\"},\n    {\"name\":\"Czech\", \"local\":\"Čeština\", \"1\":\"cs\", \"2\":\"ces\", \"2T\":\"ces\", \"2B\":\"cze\", \"3\":\"ces\"},\n    {\"name\":\"Danish\", \"local\":\"Dansk\", \"1\":\"da\", \"2\":\"dan\", \"2T\":\"dan\", \"2B\":\"dan\", \"3\":\"dan\"},\n    {\"name\":\"Divehi\", \"local\":\"Divehi\", \"1\":\"dv\", \"2\":\"div\", \"2T\":\"div\", \"2B\":\"div\", \"3\":\"div\"},\n    {\"name\":\"Dutch\", \"local\":\"Nederlands\", \"1\":\"nl\", \"2\":\"nld\", \"2T\":\"nld\", \"2B\":\"dut\", \"3\":\"nld\"},\n    {\"name\":\"Dzongkha\", \"local\":\"རྫོང་ཁ\", \"1\":\"dz\", \"2\":\"dzo\", \"2T\":\"dzo\", \"2B\":\"dzo\", \"3\":\"dzo\"},\n    {\"name\":\"English\", \"local\":\"English\", \"1\":\"en\", \"2\":\"eng\", \"2T\":\"eng\", \"2B\":\"eng\", \"3\":\"eng\"},\n    {\"name\":\"Esperanto\", \"local\":\"Esperanto\", \"1\":\"eo\", \"2\":\"epo\", \"2T\":\"epo\", \"2B\":\"epo\", \"3\":\"epo\"},\n    {\"name\":\"Estonian\", \"local\":\"Eesti\", \"1\":\"et\", \"2\":\"est\", \"2T\":\"est\", \"2B\":\"est\", \"3\":\"est\"},\n    {\"name\":\"Ewe\", \"local\":\"Eʋegbe\", \"1\":\"ee\", \"2\":\"ewe\", \"2T\":\"ewe\", \"2B\":\"ewe\", \"3\":\"ewe\"},\n    {\"name\":\"Faroese\", \"local\":\"Føroyskt\", \"1\":\"fo\", \"2\":\"fao\", \"2T\":\"fao\", \"2B\":\"fao\", \"3\":\"fao\"},\n    {\"name\":\"Fijian\", \"local\":\"Na Vosa Vaka-Viti\", \"1\":\"fj\", \"2\":\"fij\", \"2T\":\"fij\", \"2B\":\"fij\", \"3\":\"fij\"},\n    {\"name\":\"Finnish\", \"local\":\"Suomi\", \"1\":\"fi\", \"2\":\"fin\", \"2T\":\"fin\", \"2B\":\"fin\", \"3\":\"fin\"},\n    {\"name\":\"French\", \"local\":\"Français\", \"1\":\"fr\", \"2\":\"fra\", \"2T\":\"fra\", \"2B\":\"fre\", \"3\":\"fra\"},\n    {\"name\":\"Fula\", \"local\":\"Fulfulde\", \"1\":\"ff\", \"2\":\"ful\", \"2T\":\"ful\", \"2B\":\"ful\", \"3\":\"ful\"},\n    {\"name\":\"Galician\", \"local\":\"Galego\", \"1\":\"gl\", \"2\":\"glg\", \"2T\":\"glg\", \"2B\":\"glg\", \"3\":\"glg\"},\n    {\"name\":\"Georgian\", \"local\":\"ქართული\", \"1\":\"ka\", \"2\":\"kat\", \"2T\":\"kat\", \"2B\":\"geo\", \"3\":\"kat\"},\n    {\"name\":\"German\", \"local\":\"Deutsch\", \"1\":\"de\", \"2\":\"deu\", \"2T\":\"deu\", \"2B\":\"ger\", \"3\":\"deu\"},\n    {\"name\":\"Greek\", \"local\":\"Ελληνικά\", \"1\":\"el\", \"2\":\"ell\", \"2T\":\"ell\", \"2B\":\"gre\", \"3\":\"ell\"},\n    {\"name\":\"Guaraní\", \"local\":\"Avañe'ẽ\", \"1\":\"gn\", \"2\":\"grn\", \"2T\":\"grn\", \"2B\":\"grn\", \"3\":\"grn\"},\n    {\"name\":\"Gujarati\", \"local\":\"ગુજરાતી\", \"1\":\"gu\", \"2\":\"guj\", \"2T\":\"guj\", \"2B\":\"guj\", \"3\":\"guj\"},\n    {\"name\":\"Haitian\", \"local\":\"Kreyòl Ayisyen\", \"1\":\"ht\", \"2\":\"hat\", \"2T\":\"hat\", \"2B\":\"hat\", \"3\":\"hat\"},\n    {\"name\":\"Hausa\", \"local\":\"هَوُسَ\", \"1\":\"ha\", \"2\":\"hau\", \"2T\":\"hau\", \"2B\":\"hau\", \"3\":\"hau\"},\n    {\"name\":\"Hebrew\", \"local\":\"עברית\", \"1\":\"he\", \"2\":\"heb\", \"2T\":\"heb\", \"2B\":\"heb\", \"3\":\"heb\"},\n    {\"name\":\"Herero\", \"local\":\"Otjiherero\", \"1\":\"hz\", \"2\":\"her\", \"2T\":\"her\", \"2B\":\"her\", \"3\":\"her\"},\n    {\"name\":\"Hindi\", \"local\":\"हिन्दी\", \"1\":\"hi\", \"2\":\"hin\", \"2T\":\"hin\", \"2B\":\"hin\", \"3\":\"hin\"},\n    {\"name\":\"Hiri Motu\", \"local\":\"Hiri Motu\", \"1\":\"ho\", \"2\":\"hmo\", \"2T\":\"hmo\", \"2B\":\"hmo\", \"3\":\"hmo\"},\n    {\"name\":\"Hungarian\", \"local\":\"Magyar\", \"1\":\"hu\", \"2\":\"hun\", \"2T\":\"hun\", \"2B\":\"hun\", \"3\":\"hun\"},\n    {\"name\":\"Interlingua\", \"local\":\"Interlingua\", \"1\":\"ia\", \"2\":\"ina\", \"2T\":\"ina\", \"2B\":\"ina\", \"3\":\"ina\"},\n    {\"name\":\"Indonesian\", \"local\":\"Bahasa Indonesia\", \"1\":\"id\", \"2\":\"ind\", \"2T\":\"ind\", \"2B\":\"ind\", \"3\":\"ind\"},\n    {\"name\":\"Interlingue\", \"local\":\"Interlingue\", \"1\":\"ie\", \"2\":\"ile\", \"2T\":\"ile\", \"2B\":\"ile\", \"3\":\"ile\"},\n    {\"name\":\"Irish\", \"local\":\"Gaeilge\", \"1\":\"ga\", \"2\":\"gle\", \"2T\":\"gle\", \"2B\":\"gle\", \"3\":\"gle\"},\n    {\"name\":\"Igbo\", \"local\":\"Igbo\", \"1\":\"ig\", \"2\":\"ibo\", \"2T\":\"ibo\", \"2B\":\"ibo\", \"3\":\"ibo\"},\n    {\"name\":\"Inupiaq\", \"local\":\"Iñupiak\", \"1\":\"ik\", \"2\":\"ipk\", \"2T\":\"ipk\", \"2B\":\"ipk\", \"3\":\"ipk\"},\n    {\"name\":\"Ido\", \"local\":\"Ido\", \"1\":\"io\", \"2\":\"ido\", \"2T\":\"ido\", \"2B\":\"ido\", \"3\":\"ido\"},\n    {\"name\":\"Icelandic\", \"local\":\"Íslenska\", \"1\":\"is\", \"2\":\"isl\", \"2T\":\"isl\", \"2B\":\"ice\", \"3\":\"isl\"},\n    {\"name\":\"Italian\", \"local\":\"Italiano\", \"1\":\"it\", \"2\":\"ita\", \"2T\":\"ita\", \"2B\":\"ita\", \"3\":\"ita\"},\n    {\"name\":\"Inuktitut\", \"local\":\"ᐃᓄᒃᑎᑐᑦ\", \"1\":\"iu\", \"2\":\"iku\", \"2T\":\"iku\", \"2B\":\"iku\", \"3\":\"iku\"},\n    {\"name\":\"Japanese\", \"local\":\"日本語\", \"1\":\"ja\", \"2\":\"jpn\", \"2T\":\"jpn\", \"2B\":\"jpn\", \"3\":\"jpn\"},\n    {\"name\":\"Javanese\", \"local\":\"Basa Jawa\", \"1\":\"jv\", \"2\":\"jav\", \"2T\":\"jav\", \"2B\":\"jav\", \"3\":\"jav\"},\n    {\"name\":\"Kalaallisut\", \"local\":\"Kalaallisut\", \"1\":\"kl\", \"2\":\"kal\", \"2T\":\"kal\", \"2B\":\"kal\", \"3\":\"kal\"},\n    {\"name\":\"Kannada\", \"local\":\"ಕನ್ನಡ\", \"1\":\"kn\", \"2\":\"kan\", \"2T\":\"kan\", \"2B\":\"kan\", \"3\":\"kan\"},\n    {\"name\":\"Kanuri\", \"local\":\"Kanuri\", \"1\":\"kr\", \"2\":\"kau\", \"2T\":\"kau\", \"2B\":\"kau\", \"3\":\"kau\"},\n    {\"name\":\"Kashmiri\", \"local\":\"كشميري\", \"1\":\"ks\", \"2\":\"kas\", \"2T\":\"kas\", \"2B\":\"kas\", \"3\":\"kas\"},\n    {\"name\":\"Kazakh\", \"local\":\"Қазақша\", \"1\":\"kk\", \"2\":\"kaz\", \"2T\":\"kaz\", \"2B\":\"kaz\", \"3\":\"kaz\"},\n    {\"name\":\"Khmer\", \"local\":\"ភាសាខ្មែរ\", \"1\":\"km\", \"2\":\"khm\", \"2T\":\"khm\", \"2B\":\"khm\", \"3\":\"khm\"},\n    {\"name\":\"Kikuyu\", \"local\":\"Gĩkũyũ\", \"1\":\"ki\", \"2\":\"kik\", \"2T\":\"kik\", \"2B\":\"kik\", \"3\":\"kik\"},\n    {\"name\":\"Kinyarwanda\", \"local\":\"Kinyarwanda\", \"1\":\"rw\", \"2\":\"kin\", \"2T\":\"kin\", \"2B\":\"kin\", \"3\":\"kin\"},\n    {\"name\":\"Kyrgyz\", \"local\":\"Кыргызча\", \"1\":\"ky\", \"2\":\"kir\", \"2T\":\"kir\", \"2B\":\"kir\", \"3\":\"kir\"},\n    {\"name\":\"Komi\", \"local\":\"Коми\", \"1\":\"kv\", \"2\":\"kom\", \"2T\":\"kom\", \"2B\":\"kom\", \"3\":\"kom\"},\n    {\"name\":\"Kongo\", \"local\":\"Kongo\", \"1\":\"kg\", \"2\":\"kon\", \"2T\":\"kon\", \"2B\":\"kon\", \"3\":\"kon\"},\n    {\"name\":\"Korean\", \"local\":\"한국어\", \"1\":\"ko\", \"2\":\"kor\", \"2T\":\"kor\", \"2B\":\"kor\", \"3\":\"kor\"},\n    {\"name\":\"Kurdish\", \"local\":\"Kurdî\", \"1\":\"ku\", \"2\":\"kur\", \"2T\":\"kur\", \"2B\":\"kur\", \"3\":\"kur\"},\n    {\"name\":\"Kwanyama\", \"local\":\"Kuanyama\", \"1\":\"kj\", \"2\":\"kua\", \"2T\":\"kua\", \"2B\":\"kua\", \"3\":\"kua\"},\n    {\"name\":\"Latin\", \"local\":\"Latina\", \"1\":\"la\", \"2\":\"lat\", \"2T\":\"lat\", \"2B\":\"lat\", \"3\":\"lat\"},\n    {\"name\":\"Luxembourgish\", \"local\":\"Lëtzebuergesch\", \"1\":\"lb\", \"2\":\"ltz\", \"2T\":\"ltz\", \"2B\":\"ltz\", \"3\":\"ltz\"},\n    {\"name\":\"Ganda\", \"local\":\"Luganda\", \"1\":\"lg\", \"2\":\"lug\", \"2T\":\"lug\", \"2B\":\"lug\", \"3\":\"lug\"},\n    {\"name\":\"Limburgish\", \"local\":\"Limburgs\", \"1\":\"li\", \"2\":\"lim\", \"2T\":\"lim\", \"2B\":\"lim\", \"3\":\"lim\"},\n    {\"name\":\"Lingala\", \"local\":\"Lingála\", \"1\":\"ln\", \"2\":\"lin\", \"2T\":\"lin\", \"2B\":\"lin\", \"3\":\"lin\"},\n    {\"name\":\"Lao\", \"local\":\"ພາສາລາວ\", \"1\":\"lo\", \"2\":\"lao\", \"2T\":\"lao\", \"2B\":\"lao\", \"3\":\"lao\"},\n    {\"name\":\"Lithuanian\", \"local\":\"Lietuvių\", \"1\":\"lt\", \"2\":\"lit\", \"2T\":\"lit\", \"2B\":\"lit\", \"3\":\"lit\"},\n    {\"name\":\"Luba-Katanga\", \"local\":\"Tshiluba\", \"1\":\"lu\", \"2\":\"lub\", \"2T\":\"lub\", \"2B\":\"lub\", \"3\":\"lub\"},\n    {\"name\":\"Latvian\", \"local\":\"Latviešu\", \"1\":\"lv\", \"2\":\"lav\", \"2T\":\"lav\", \"2B\":\"lav\", \"3\":\"lav\"},\n    {\"name\":\"Manx\", \"local\":\"Gaelg\", \"1\":\"gv\", \"2\":\"glv\", \"2T\":\"glv\", \"2B\":\"glv\", \"3\":\"glv\"},\n    {\"name\":\"Macedonian\", \"local\":\"Македонски\", \"1\":\"mk\", \"2\":\"mkd\", \"2T\":\"mkd\", \"2B\":\"mac\", \"3\":\"mkd\"},\n    {\"name\":\"Malagasy\", \"local\":\"Malagasy\", \"1\":\"mg\", \"2\":\"mlg\", \"2T\":\"mlg\", \"2B\":\"mlg\", \"3\":\"mlg\"},\n    {\"name\":\"Malay\", \"local\":\"Bahasa Melayu\", \"1\":\"ms\", \"2\":\"msa\", \"2T\":\"msa\", \"2B\":\"may\", \"3\":\"msa\"},\n    {\"name\":\"Malayalam\", \"local\":\"മലയാളം\", \"1\":\"ml\", \"2\":\"mal\", \"2T\":\"mal\", \"2B\":\"mal\", \"3\":\"mal\"},\n    {\"name\":\"Maltese\", \"local\":\"Malti\", \"1\":\"mt\", \"2\":\"mlt\", \"2T\":\"mlt\", \"2B\":\"mlt\", \"3\":\"mlt\"},\n    {\"name\":\"Māori\", \"local\":\"Māori\", \"1\":\"mi\", \"2\":\"mri\", \"2T\":\"mri\", \"2B\":\"mao\", \"3\":\"mri\"},\n    {\"name\":\"Marathi\", \"local\":\"मराठी\", \"1\":\"mr\", \"2\":\"mar\", \"2T\":\"mar\", \"2B\":\"mar\", \"3\":\"mar\"},\n    {\"name\":\"Marshallese\", \"local\":\"Kajin M̧ajeļ\", \"1\":\"mh\", \"2\":\"mah\", \"2T\":\"mah\", \"2B\":\"mah\", \"3\":\"mah\"},\n    {\"name\":\"Mongolian\", \"local\":\"Монгол\", \"1\":\"mn\", \"2\":\"mon\", \"2T\":\"mon\", \"2B\":\"mon\", \"3\":\"mon\"},\n    {\"name\":\"Nauru\", \"local\":\"Dorerin Naoero\", \"1\":\"na\", \"2\":\"nau\", \"2T\":\"nau\", \"2B\":\"nau\", \"3\":\"nau\"},\n    {\"name\":\"Navajo\", \"local\":\"Diné Bizaad\", \"1\":\"nv\", \"2\":\"nav\", \"2T\":\"nav\", \"2B\":\"nav\", \"3\":\"nav\"},\n    {\"name\":\"Northern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nd\", \"2\":\"nde\", \"2T\":\"nde\", \"2B\":\"nde\", \"3\":\"nde\"},\n    {\"name\":\"Nepali\", \"local\":\"नेपाली\", \"1\":\"ne\", \"2\":\"nep\", \"2T\":\"nep\", \"2B\":\"nep\", \"3\":\"nep\"},\n    {\"name\":\"Ndonga\", \"local\":\"Owambo\", \"1\":\"ng\", \"2\":\"ndo\", \"2T\":\"ndo\", \"2B\":\"ndo\", \"3\":\"ndo\"},\n    {\"name\":\"Norwegian Bokmål\", \"local\":\"Norsk (Bokmål)\", \"1\":\"nb\", \"2\":\"nob\", \"2T\":\"nob\", \"2B\":\"nob\", \"3\":\"nob\"},\n    {\"name\":\"Norwegian Nynorsk\", \"local\":\"Norsk (Nynorsk)\", \"1\":\"nn\", \"2\":\"nno\", \"2T\":\"nno\", \"2B\":\"nno\", \"3\":\"nno\"},\n    {\"name\":\"Norwegian\", \"local\":\"Norsk\", \"1\":\"no\", \"2\":\"nor\", \"2T\":\"nor\", \"2B\":\"nor\", \"3\":\"nor\"},\n    {\"name\":\"Nuosu\", \"local\":\"ꆈꌠ꒿ Nuosuhxop\", \"1\":\"ii\", \"2\":\"iii\", \"2T\":\"iii\", \"2B\":\"iii\", \"3\":\"iii\"},\n    {\"name\":\"Southern Ndebele\", \"local\":\"isiNdebele\", \"1\":\"nr\", \"2\":\"nbl\", \"2T\":\"nbl\", \"2B\":\"nbl\", \"3\":\"nbl\"},\n    {\"name\":\"Occitan\", \"local\":\"Occitan\", \"1\":\"oc\", \"2\":\"oci\", \"2T\":\"oci\", \"2B\":\"oci\", \"3\":\"oci\"},\n    {\"name\":\"Ojibwe\", \"local\":\"ᐊᓂᔑᓈᐯᒧᐎᓐ\", \"1\":\"oj\", \"2\":\"oji\", \"2T\":\"oji\", \"2B\":\"oji\", \"3\":\"oji\"},\n    {\"name\":\"Old Church Slavonic\", \"local\":\"Словѣ́ньскъ\", \"1\":\"cu\", \"2\":\"chu\", \"2T\":\"chu\", \"2B\":\"chu\", \"3\":\"chu\"},\n    {\"name\":\"Oromo\", \"local\":\"Afaan Oromoo\", \"1\":\"om\", \"2\":\"orm\", \"2T\":\"orm\", \"2B\":\"orm\", \"3\":\"orm\"},\n    {\"name\":\"Oriya\", \"local\":\"ଓଡି଼ଆ\", \"1\":\"or\", \"2\":\"ori\", \"2T\":\"ori\", \"2B\":\"ori\", \"3\":\"ori\"},\n    {\"name\":\"Ossetian\", \"local\":\"Ирон æвзаг\", \"1\":\"os\", \"2\":\"oss\", \"2T\":\"oss\", \"2B\":\"oss\", \"3\":\"oss\"},\n    {\"name\":\"Panjabi\", \"local\":\"ਪੰਜਾਬੀ\", \"1\":\"pa\", \"2\":\"pan\", \"2T\":\"pan\", \"2B\":\"pan\", \"3\":\"pan\"},\n    {\"name\":\"Pāli\", \"local\":\"पाऴि\", \"1\":\"pi\", \"2\":\"pli\", \"2T\":\"pli\", \"2B\":\"pli\", \"3\":\"pli\"},\n    {\"name\":\"Persian\", \"local\":\"فارسی\", \"1\":\"fa\", \"2\":\"fas\", \"2T\":\"fas\", \"2B\":\"per\", \"3\":\"fas\"},\n    {\"name\":\"Polish\", \"local\":\"Polski\", \"1\":\"pl\", \"2\":\"pol\", \"2T\":\"pol\", \"2B\":\"pol\", \"3\":\"pol\"},\n    {\"name\":\"Pashto\", \"local\":\"پښتو\", \"1\":\"ps\", \"2\":\"pus\", \"2T\":\"pus\", \"2B\":\"pus\", \"3\":\"pus\"},\n    {\"name\":\"Portuguese\", \"local\":\"Português\", \"1\":\"pt\", \"2\":\"por\", \"2T\":\"por\", \"2B\":\"por\", \"3\":\"por\"},\n    {\"name\":\"Quechua\", \"local\":\"Runa Simi\", \"1\":\"qu\", \"2\":\"que\", \"2T\":\"que\", \"2B\":\"que\", \"3\":\"que\"},\n    {\"name\":\"Romansh\", \"local\":\"Rumantsch\", \"1\":\"rm\", \"2\":\"roh\", \"2T\":\"roh\", \"2B\":\"roh\", \"3\":\"roh\"},\n    {\"name\":\"Kirundi\", \"local\":\"Kirundi\", \"1\":\"rn\", \"2\":\"run\", \"2T\":\"run\", \"2B\":\"run\", \"3\":\"run\"},\n    {\"name\":\"Romanian\", \"local\":\"Română\", \"1\":\"ro\", \"2\":\"ron\", \"2T\":\"ron\", \"2B\":\"rum\", \"3\":\"ron\"},\n    {\"name\":\"Russian\", \"local\":\"Русский\", \"1\":\"ru\", \"2\":\"rus\", \"2T\":\"rus\", \"2B\":\"rus\", \"3\":\"rus\"},\n    {\"name\":\"Sanskrit\", \"local\":\"संस्कृतम्\", \"1\":\"sa\", \"2\":\"san\", \"2T\":\"san\", \"2B\":\"san\", \"3\":\"san\"},\n    {\"name\":\"Sardinian\", \"local\":\"Sardu\", \"1\":\"sc\", \"2\":\"srd\", \"2T\":\"srd\", \"2B\":\"srd\", \"3\":\"srd\"},\n    {\"name\":\"Sindhi\", \"local\":\"سنڌي‎\", \"1\":\"sd\", \"2\":\"snd\", \"2T\":\"snd\", \"2B\":\"snd\", \"3\":\"snd\"},\n    {\"name\":\"Northern Sami\", \"local\":\"Sámegiella\", \"1\":\"se\", \"2\":\"sme\", \"2T\":\"sme\", \"2B\":\"sme\", \"3\":\"sme\"},\n    {\"name\":\"Samoan\", \"local\":\"Gagana Sāmoa\", \"1\":\"sm\", \"2\":\"smo\", \"2T\":\"smo\", \"2B\":\"smo\", \"3\":\"smo\"},\n    {\"name\":\"Sango\", \"local\":\"Sängö\", \"1\":\"sg\", \"2\":\"sag\", \"2T\":\"sag\", \"2B\":\"sag\", \"3\":\"sag\"},\n    {\"name\":\"Serbian\", \"local\":\"Српски\", \"1\":\"sr\", \"2\":\"srp\", \"2T\":\"srp\", \"2B\":\"srp\", \"3\":\"srp\"},\n    {\"name\":\"Gaelic\", \"local\":\"Gàidhlig\", \"1\":\"gd\", \"2\":\"gla\", \"2T\":\"gla\", \"2B\":\"gla\", \"3\":\"gla\"},\n    {\"name\":\"Shona\", \"local\":\"ChiShona\", \"1\":\"sn\", \"2\":\"sna\", \"2T\":\"sna\", \"2B\":\"sna\", \"3\":\"sna\"},\n    {\"name\":\"Sinhala\", \"local\":\"සිංහල\", \"1\":\"si\", \"2\":\"sin\", \"2T\":\"sin\", \"2B\":\"sin\", \"3\":\"sin\"},\n    {\"name\":\"Slovak\", \"local\":\"Slovenčina\", \"1\":\"sk\", \"2\":\"slk\", \"2T\":\"slk\", \"2B\":\"slo\", \"3\":\"slk\"},\n    {\"name\":\"Slovene\", \"local\":\"Slovenščina\", \"1\":\"sl\", \"2\":\"slv\", \"2T\":\"slv\", \"2B\":\"slv\", \"3\":\"slv\"},\n    {\"name\":\"Somali\", \"local\":\"Soomaaliga\", \"1\":\"so\", \"2\":\"som\", \"2T\":\"som\", \"2B\":\"som\", \"3\":\"som\"},\n    {\"name\":\"Southern Sotho\", \"local\":\"Sesotho\", \"1\":\"st\", \"2\":\"sot\", \"2T\":\"sot\", \"2B\":\"sot\", \"3\":\"sot\"},\n    {\"name\":\"Spanish\", \"local\":\"Español\", \"1\":\"es\", \"2\":\"spa\", \"2T\":\"spa\", \"2B\":\"spa\", \"3\":\"spa\"},\n    {\"name\":\"Sundanese\", \"local\":\"Basa Sunda\", \"1\":\"su\", \"2\":\"sun\", \"2T\":\"sun\", \"2B\":\"sun\", \"3\":\"sun\"},\n    {\"name\":\"Swahili\", \"local\":\"Kiswahili\", \"1\":\"sw\", \"2\":\"swa\", \"2T\":\"swa\", \"2B\":\"swa\", \"3\":\"swa\"},\n    {\"name\":\"Swati\", \"local\":\"SiSwati\", \"1\":\"ss\", \"2\":\"ssw\", \"2T\":\"ssw\", \"2B\":\"ssw\", \"3\":\"ssw\"},\n    {\"name\":\"Swedish\", \"local\":\"Svenska\", \"1\":\"sv\", \"2\":\"swe\", \"2T\":\"swe\", \"2B\":\"swe\", \"3\":\"swe\"},\n    {\"name\":\"Tamil\", \"local\":\"தமிழ்\", \"1\":\"ta\", \"2\":\"tam\", \"2T\":\"tam\", \"2B\":\"tam\", \"3\":\"tam\"},\n    {\"name\":\"Telugu\", \"local\":\"తెలుగు\", \"1\":\"te\", \"2\":\"tel\", \"2T\":\"tel\", \"2B\":\"tel\", \"3\":\"tel\"},\n    {\"name\":\"Tajik\", \"local\":\"Тоҷикӣ\", \"1\":\"tg\", \"2\":\"tgk\", \"2T\":\"tgk\", \"2B\":\"tgk\", \"3\":\"tgk\"},\n    {\"name\":\"Thai\", \"local\":\"ภาษาไทย\", \"1\":\"th\", \"2\":\"tha\", \"2T\":\"tha\", \"2B\":\"tha\", \"3\":\"tha\"},\n    {\"name\":\"Tigrinya\", \"local\":\"ትግርኛ\", \"1\":\"ti\", \"2\":\"tir\", \"2T\":\"tir\", \"2B\":\"tir\", \"3\":\"tir\"},\n    {\"name\":\"Tibetan Standard\", \"local\":\"བོད་ཡིག\", \"1\":\"bo\", \"2\":\"bod\", \"2T\":\"bod\", \"2B\":\"tib\", \"3\":\"bod\"},\n    {\"name\":\"Turkmen\", \"local\":\"Türkmençe\", \"1\":\"tk\", \"2\":\"tuk\", \"2T\":\"tuk\", \"2B\":\"tuk\", \"3\":\"tuk\"},\n    {\"name\":\"Tagalog\", \"local\":\"Tagalog\", \"1\":\"tl\", \"2\":\"tgl\", \"2T\":\"tgl\", \"2B\":\"tgl\", \"3\":\"tgl\"},\n    {\"name\":\"Tswana\", \"local\":\"Setswana\", \"1\":\"tn\", \"2\":\"tsn\", \"2T\":\"tsn\", \"2B\":\"tsn\", \"3\":\"tsn\"},\n    {\"name\":\"Tonga\", \"local\":\"faka Tonga\", \"1\":\"to\", \"2\":\"ton\", \"2T\":\"ton\", \"2B\":\"ton\", \"3\":\"ton\"},\n    {\"name\":\"Turkish\", \"local\":\"Türkçe\", \"1\":\"tr\", \"2\":\"tur\", \"2T\":\"tur\", \"2B\":\"tur\", \"3\":\"tur\"},\n    {\"name\":\"Tsonga\", \"local\":\"Xitsonga\", \"1\":\"ts\", \"2\":\"tso\", \"2T\":\"tso\", \"2B\":\"tso\", \"3\":\"tso\"},\n    {\"name\":\"Tatar\", \"local\":\"Татарча\", \"1\":\"tt\", \"2\":\"tat\", \"2T\":\"tat\", \"2B\":\"tat\", \"3\":\"tat\"},\n    {\"name\":\"Twi\", \"local\":\"Twi\", \"1\":\"tw\", \"2\":\"twi\", \"2T\":\"twi\", \"2B\":\"twi\", \"3\":\"twi\"},\n    {\"name\":\"Tahitian\", \"local\":\"Reo Mā’ohi\", \"1\":\"ty\", \"2\":\"tah\", \"2T\":\"tah\", \"2B\":\"tah\", \"3\":\"tah\"},\n    {\"name\":\"Uyghur\", \"local\":\"ئۇيغۇرچه\", \"1\":\"ug\", \"2\":\"uig\", \"2T\":\"uig\", \"2B\":\"uig\", \"3\":\"uig\"},\n    {\"name\":\"Ukrainian\", \"local\":\"Українська\", \"1\":\"uk\", \"2\":\"ukr\", \"2T\":\"ukr\", \"2B\":\"ukr\", \"3\":\"ukr\"},\n    {\"name\":\"Urdu\", \"local\":\"اردو\", \"1\":\"ur\", \"2\":\"urd\", \"2T\":\"urd\", \"2B\":\"urd\", \"3\":\"urd\"},\n    {\"name\":\"Uzbek\", \"local\":\"O‘zbek\", \"1\":\"uz\", \"2\":\"uzb\", \"2T\":\"uzb\", \"2B\":\"uzb\", \"3\":\"uzb\"},\n    {\"name\":\"Venda\", \"local\":\"Tshivenḓa\", \"1\":\"ve\", \"2\":\"ven\", \"2T\":\"ven\", \"2B\":\"ven\", \"3\":\"ven\"},\n    {\"name\":\"Vietnamese\", \"local\":\"Tiếng Việt\", \"1\":\"vi\", \"2\":\"vie\", \"2T\":\"vie\", \"2B\":\"vie\", \"3\":\"vie\"},\n    {\"name\":\"Volapük\", \"local\":\"Volapük\", \"1\":\"vo\", \"2\":\"vol\", \"2T\":\"vol\", \"2B\":\"vol\", \"3\":\"vol\"},\n    {\"name\":\"Walloon\", \"local\":\"Walon\", \"1\":\"wa\", \"2\":\"wln\", \"2T\":\"wln\", \"2B\":\"wln\", \"3\":\"wln\"},\n    {\"name\":\"Welsh\", \"local\":\"Cymraeg\", \"1\":\"cy\", \"2\":\"cym\", \"2T\":\"cym\", \"2B\":\"wel\", \"3\":\"cym\"},\n    {\"name\":\"Wolof\", \"local\":\"Wolof\", \"1\":\"wo\", \"2\":\"wol\", \"2T\":\"wol\", \"2B\":\"wol\", \"3\":\"wol\"},\n    {\"name\":\"Western Frisian\", \"local\":\"Frysk\", \"1\":\"fy\", \"2\":\"fry\", \"2T\":\"fry\", \"2B\":\"fry\", \"3\":\"fry\"},\n    {\"name\":\"Xhosa\", \"local\":\"isiXhosa\", \"1\":\"xh\", \"2\":\"xho\", \"2T\":\"xho\", \"2B\":\"xho\", \"3\":\"xho\"},\n    {\"name\":\"Yiddish\", \"local\":\"ייִדיש\", \"1\":\"yi\", \"2\":\"yid\", \"2T\":\"yid\", \"2B\":\"yid\", \"3\":\"yid\"},\n    {\"name\":\"Yoruba\", \"local\":\"Yorùbá\", \"1\":\"yo\", \"2\":\"yor\", \"2T\":\"yor\", \"2B\":\"yor\", \"3\":\"yor\"},\n    {\"name\":\"Zhuang\", \"local\":\"Cuengh\", \"1\":\"za\", \"2\":\"zha\", \"2T\":\"zha\", \"2B\":\"zha\", \"3\":\"zha\"},\n    {\"name\":\"Zulu\", \"local\":\"isiZulu\", \"1\":\"zu\", \"2\":\"zul\", \"2T\":\"zul\", \"2B\":\"zul\", \"3\":\"zul\"}\n];\n","var data = require('./data');\n\nvar langs = {\n    all:   allLanguages,\n    has:   hasLanguage,\n    codes: getCodes,\n    names: getNames,\n    where: findBy\n};\n\nmodule.exports = langs;\n\n// allLanguages :: -> Language[]\nfunction allLanguages() {\n    return data;\n}\n\n// hasLanguage :: String, String -> Boolean\nfunction hasLanguage(crit, val) {\n    return void(0) !== findBy(crit, val);\n}\n\n// getCodes :: String -> String[]\nfunction getCodes(type) {\n    if (isValidType(type)) {\n        return forAll(data, function getCodesIterator(row) {\n            return row[type];\n        });\n    }\n}\n\n// getNames :: Boolean -> String[]\nfunction getNames(local) {\n    return forAll(data, function getNamesIterator(row) {\n        return local ? row.local : row.name;\n    });\n}\n\n// findBy :: String, String -> Language\nfunction findBy(crit, val) {\n    for (var i = 0; i < data.length; i++) {\n        if (val === data[i][crit]) {\n            return data[i];\n        }\n    }\n}\n\n// forAll :: Array, Function -> Array\nfunction forAll(arr, fn) {\n    var out = [], i;\n    for (i = 0; i < arr.length; i++) {\n        out.push(fn(arr[i], i));\n    }\n\n    return out;\n}\n\n// isValidType :: String -> Boolean\nfunction isValidType(type) {\n    var types = [1, 2, 3, '1', '2', '2B', '2T', '3'];\n    return -1 !== types.indexOf(type);\n}\n","const lcid = require('windows-locale')\nconst iso = require('iso639-codes')\nconst langs = require('langs').all()\n\nconst all = []\n\nlet lcidLanguage\nlet isoLanguage\n\nconst lcidKeys = Object.keys(lcid)\nconst isoKeys = Object.keys(iso)\n\nlcidKeys.map(id => {\n\tlcidLanguage = id\n\tconst locale = {\n\t\tname: lcid[lcidLanguage].language,\n\t\tlocal: null,\n\t\tlocation: lcid[lcidLanguage].location,\n\t\ttag: lcid[lcidLanguage].tag,\n\t\tlcid: lcid[lcidLanguage].id,\n\t\t'iso639-2': null,\n\t\t'iso639-1': null\n\t}\n\n\tisoLanguage = isoKeys.find(name => name.toLowerCase() === lcid[lcidLanguage].language.toLowerCase())\n\tif (isoLanguage) {\n\t\tlocale['iso639-2'] = iso[isoLanguage]['iso639-2']\n\t\tlocale['iso639-1'] = iso[isoLanguage]['iso639-1']\n\n\t\tconst nameLocal = langs.find(element => {\n\t\t\tif (element['2T']) {\n\t\t\t\treturn element['2T'].toLowerCase() === locale['iso639-2']\n\t\t\t}\n\n\t\t\treturn false\n\t\t})\n\n\t\tif (nameLocal) {\n\t\t\tlocale.local = nameLocal.local\n\t\t}\n\t}\n\n\tall.push(locale)\n})\n\nconst where = (key = 'name', text = '') => {\n\tif (key === 'lcid') {\n\t\treturn all.find(element => element[key] === text)\n\t}\n\n\treturn all.find(element => element[key].toLowerCase() === text.toLowerCase())\n}\n\nconst getByName = text => where('name', text)\n\nconst getByNameLocal = text => where('local', text)\n\nconst getByLocation = text => where('location', text)\n\nconst getByTag = text => where('tag', text)\n\nconst getByLCID = id => where('lcid', Number(id))\n\nconst getByISO6392 = text => where('iso639-2', text)\n\nconst getByISO6391 = text => where('iso639-1', text)\n\nmodule.exports = {\n\tall,\n\twhere,\n\tgetByName,\n\tgetByNameLocal,\n\tgetByLocation,\n\tgetByTag,\n\tgetByLCID,\n\tgetByISO6392,\n\tgetByISO6391\n}\n","<style>\r\n  select {\r\n    width: 600px;\r\n    max-width: 90%;\r\n  }\r\n\r\n  textarea {\r\n    width: 600px;\r\n    max-width: 90%;\r\n    height: 300px;\r\n    max-height: 90%;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import locale from 'locale-codes'\r\n\r\n  let selected = 'ja-JP' // array works too: ['ja-JP']\r\n  const languages = locale.all.filter(lang => !!lang.location)\r\n\r\n  const speechRecognition = window.webkitSpeechRecognition\r\n  const recognition = new speechRecognition()\r\n\r\n  let content = ''\r\n  let started = false\r\n  let instruction = 'Press the Start button'\r\n\r\n  recognition.lang = selected\r\n  recognition.continuous = true\r\n\r\n  recognition.onstart = () => {\r\n    instruction = 'Voice recognition started'\r\n  }\r\n\r\n  recognition.onspeechend = () => {\r\n    recognition.stop()\r\n    started = false\r\n    instruction = 'Voice recognition stopped'\r\n  }\r\n\r\n  recognition.onerror = err => {\r\n    instruction = 'Try Again'\r\n  }\r\n\r\n  recognition.onresult = event => {\r\n    var current = event.resultIndex\r\n    var transcript = event.results[current][0].transcript\r\n    content = `${transcript}\\n\\n${content}`\r\n  }\r\n\r\n  const handleClickStart = () => {\r\n    recognition.start()\r\n    started = true\r\n  }\r\n\r\n  const handleClickEnd = () => {\r\n    recognition.stop()\r\n    started = false\r\n  }\r\n\r\n  const handleChangeText = () => {\r\n    content = ''\r\n  }\r\n\r\n  const handleChangeLanguage = () => {\r\n    console.log('change language: ', selected)\r\n    recognition.stop()\r\n    recognition.lang = selected\r\n  }\r\n</script>\r\n\r\n<h1>Speech to Text</h1>\r\n\r\n<div>\r\n  <select bind:value={selected} on:change={handleChangeLanguage}>\r\n    {#each languages as lang}\r\n      <option value={lang.tag}>{lang.name} ({lang.location})</option>\r\n    {/each}\r\n  </select>\r\n</div>\r\n\r\n<div>\r\n  Selected: {selected}\r\n</div>\r\n\r\n<textarea value={content} on:change={handleChangeText} />\r\n\r\n<div>\r\n  {#if started}\r\n    <button on:click={handleClickEnd}>End</button>\r\n  {:else}\r\n    <button on:click={handleClickStart}>Start</button>\r\n  {/if}\r\n</div>\r\n\r\n<p>{instruction}</p>\r\n","<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<script lang=\"ts\">\n  import SpeechToText from './SpeechToText.svelte'\n\n  export let name: string\n</script>\n\n<main>\n  <h1>Hello {name}!</h1>\n  <p>\n    Visit the <a href=\"https://svelte.dev/tutorial\">Svelte tutorial</a> to learn\n    how to build Svelte apps.\n  </p>\n\n  <SpeechToText />\n</main>\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {\r\n        name: 'world'\r\n    }\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","select_option","select","i","length","option","__value","selected","selectedIndex","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","findBy","crit","val","forAll","arr","out","langs","all","codes","isValidType","row","names","where","lcidLanguage","isoLanguage","lcidKeys","lcid","isoKeys","iso","id","locale","language","location","tag","find","toLowerCase","nameLocal","key","localeCodes","getByName","getByNameLocal","getByLocation","getByTag","getByLCID","Number","getByISO6392","getByISO6391","t0_value","t2_value","option_value_value","button","create_if_block","call","h1","div0","div1","textarea","div2","iterations","languages","lang","recognition","speechRecognition","window","webkitSpeechRecognition","content","started","instruction","continuous","onstart","$$invalidate","onspeechend","stop","onerror","err","onresult","current","resultIndex","transcript","results","start","console","log","selected_option","querySelector","select_value","main","o","outros","body"],"mappings":"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"}